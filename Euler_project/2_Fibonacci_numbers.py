# -*- coding: utf-8 -*-
#Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
#Answer: 4613732

def fibonacci_even_value_sum1(highest_value):
    result = 0
    a, b = 0, 1
    while b < highest_value:
        if not b % 2:
            result += b
        a, b = b, a + b
    return result

#This function only prints the Fibonacci sequence up to value which does not exceed given number        
def fibonacci1(highest_value):
    a, b = 0, 1
    while b < highest_value:
        print (b, end=', ')
        a, b = b, a + b
#    print()
#______________________________________________________________________________
#The same approch but using a list istead of variables
def fibonacci_even_value_sum2(highest_value):
    result = 0
    a = [0, 1]
    while a[1] < highest_value:
        if not a[1] % 2:
            result += a[1]
        a = a[1], a[0] + a[1] #or a = a[1], sum(a) or a[:] = a[1], sum(a)
    return result
    
def fibonacci_even_value_sum2a(highest_value):
    result = 0
    a = [1,1]
    while (a[1] < highest_value):
        s = sum(a)
        if not (s % 2):
            result += s
        a = [a[1], s]
    return result 
   
#This function only prints the Fibonacci sequence up to value which does not exceed given number
def fibonacci2(highest_value):
    result = []
    a = [0, 1]
    while a[1] < highest_value:
        result.append(a[1])
        a = a[1], a[0] + a[1]
    return result

#------------------------------------------------------------------------------
#import time
#start_time = time.time()   
import timeit
start = timeit.default_timer()
#------------------------------------------------------------------------------
#The statements here
#fibonacci1a(10)
print(fibonacci_even_value_sum2(4e6))
#------------------------------------------------------------------------------
#print("--- %s seconds ---" % (time.time() - start_time))
stop = timeit.default_timer()
print(stop - start)